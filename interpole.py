import numpy as np
from scipy.interpolate import interp1d
import pandas as pd
import matplotlib.pyplot as plt

# Basic coordinates
x = np.array(

[
    463, 461, 460, 429, 428, 426, 426, 424, 423, 423, 422, 421, 396, 395, 395, 394, 393, 393, 394, 395, 397, 398, 400, 401, 404, 405, 407, 408, 410, 411, 413, 414, 416, 417, 419, 420, 423, 424, 426, 427, 429, 430, 432, 433, 435, 436, 438, 439, 441, 442, 445, 446, 449, 450, 451, 452, 454, 455, 457, 458, 461, 462, 464, 465, 466, 467, 470, 471, 474, 475, 477, 478, 479, 480, 482, 483, 486, 487, 489, 490, 492, 493, 495, 496, 499, 498, 90, 90, 496, 497, 496, 495, 494, 493, 491, 490, 488, 487, 486, 485, 483, 482, 481, 480, 478, 477, 476, 475, 473, 472, 471, 470, 468, 467, 465, 464, 463, 462, 460, 459, 458, 457, 456, 455, 453, 452, 450, 449, 448, 447, 445, 444, 443, 442, 440, 439, 438, 437, 435, 434, 432, 431, 430, 429, 428, 427, 425, 424, 423, 422, 420, 419, 417, 416, 415, 414, 412, 411, 410, 409, 407, 406, 405, 404, 402, 401, 400, 399, 397, 396, 395, 394, 393, 393, 396, 397, 401, 401, 402, 460, 461, 463, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 519, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 809, 807, 807, 808, 808, 809, 809, 808, 807, 806, 804, 803, 802, 801, 799, 798, 797, 796, 794, 793, 792, 791, 790, 789, 787, 786, 784, 783, 782, 781, 780, 779, 777, 776, 775, 774, 772, 771, 769, 768, 767, 766, 764, 763, 762, 761, 760, 759, 757, 756, 755, 754, 752, 751, 750, 749, 747, 746, 745, 744, 742, 741, 740, 739, 737, 736, 735, 734, 732, 731, 730, 729, 727, 726, 725, 724, 722, 721, 720, 719, 717, 716, 715, 714, 712, 711, 710, 709, 707, 706, 705, 704, 702, 701, 700, 699, 697, 696, 695, 694, 692, 691, 690, 689, 687, 686, 685, 684, 682, 681, 680, 679, 677, 676, 675, 674, 672, 671, 670, 669, 667, 666, 665, 664, 662, 661, 660, 659, 658, 657, 655, 654, 653, 652, 650, 649, 647, 646, 645, 644, 643, 642, 640, 639, 638, 637, 635, 634, 632, 631, 630, 629, 628, 627, 625, 624, 622, 621, 620, 619, 617, 616, 615, 614, 613, 612, 610, 609, 607, 606, 605, 604, 602, 601, 600, 599, 598, 597, 595, 594, 593, 592, 590, 589, 588, 587, 585, 584, 583, 582, 580, 579, 578, 577, 575, 574, 573, 572, 570, 569, 568, 567, 565, 564, 563, 562, 560, 559, 558, 557, 555, 554, 553, 552, 550, 549, 548, 547, 545, 544, 543, 542, 540, 539, 538, 537, 535, 534, 533, 532, 530, 529, 528, 527, 525, 524, 523, 522, 520, 519, 518, 517, 515, 514, 513, 512, 510, 509, 508, 507, 505, 504, 503, 502, 500, 499, 498, 497, 496, 495, 493, 492, 491, 490, 488, 487, 485, 484, 483, 482, 481, 480, 478, 477, 476, 475, 473, 472, 470, 469, 468, 467, 465, 464
    ]
)

y = np.array(
    [
    0, 2, 2, 33, 33, 35, 36, 38, 38, 39, 40, 40, 65, 65, 66, 67, 67, 68, 69, 69, 71, 71, 73, 73, 76, 76, 78, 78, 80, 80, 82, 82, 84, 84, 86, 86, 89, 89, 91, 91, 93, 93, 95, 95, 97, 97, 99, 99, 101, 101, 104, 104, 107, 107, 108, 108, 110, 110, 112, 112, 115, 115, 117, 117, 118, 118, 121, 121, 124, 124, 126, 126, 127, 127, 129, 129, 132, 132, 134, 134, 136, 136, 138, 138, 141, 142, 142, 272, 272, 273, 274, 274, 275, 275, 277, 277, 279, 279, 280, 280, 282, 282, 283, 283, 285, 285, 286, 286, 288, 288, 289, 289, 291, 291, 293, 293, 294, 294, 296, 296, 297, 297, 298, 298, 300, 300, 302, 302, 303, 303, 305, 305, 306, 306, 308, 308, 309, 309, 311, 311, 313, 313, 314, 314, 315, 315, 317, 317, 318, 318, 320, 320, 322, 322, 323, 323, 325, 325, 326, 326, 328, 328, 329, 329, 331, 331, 332, 332, 334, 334, 335, 335, 336, 337, 340, 340, 344, 345, 345, 403, 403, 405, 403, 403, 402, 402, 401, 401, 400, 400, 399, 399, 397, 397, 396, 396, 395, 395, 393, 393, 392, 392, 391, 391, 390, 390, 389, 389, 388, 388, 386, 386, 385, 385, 384, 384, 383, 383, 382, 382, 380, 380, 379, 379, 378, 378, 377, 377, 376, 376, 374, 374, 373, 373, 372, 372, 371, 371, 369, 369, 368, 368, 367, 367, 366, 366, 365, 365, 364, 364, 362, 362, 361, 361, 360, 360, 358, 358, 357, 357, 356, 356, 355, 355, 354, 354, 352, 352, 351, 351, 350, 350, 349, 349, 347, 347, 346, 346, 345, 345, 344, 344, 343, 343, 341, 341, 340, 340, 339, 339, 338, 338, 337, 337, 335, 335, 334, 334, 333, 333, 332, 332, 331, 331, 329, 329, 328, 328, 327, 327, 326, 326, 324, 324, 323, 323, 322, 322, 321, 321, 320, 320, 318, 318, 317, 317, 316, 316, 314, 314, 313, 313, 312, 312, 311, 311, 310, 310, 309, 309, 307, 307, 306, 306, 305, 305, 304, 304, 303, 303, 301, 301, 300, 300, 299, 299, 298, 298, 296, 296, 295, 295, 294, 294, 293, 293, 292, 292, 290, 290, 289, 289, 288, 288, 287, 287, 285, 285, 284, 284, 283, 283, 282, 282, 280, 280, 279, 279, 278, 278, 277, 277, 276, 276, 275, 275, 273, 273, 272, 272, 271, 271, 269, 269, 268, 268, 267, 267, 266, 266, 265, 265, 263, 263, 262, 262, 261, 261, 260, 260, 259, 259, 257, 257, 256, 256, 255, 255, 254, 254, 252, 252, 251, 251, 250, 250, 249, 249, 248, 248, 246, 246, 245, 245, 244, 244, 243, 243, 242, 242, 241, 241, 239, 239, 238, 238, 237, 237, 235, 235, 234, 234, 233, 233, 232, 232, 231, 231, 230, 230, 228, 228, 227, 227, 226, 226, 224, 224, 223, 223, 222, 222, 221, 221, 220, 220, 218, 218, 217, 217, 216, 216, 214, 212, 211, 210, 209, 208, 207, 207, 206, 206, 204, 204, 203, 203, 201, 201, 200, 200, 198, 198, 197, 197, 196, 196, 194, 194, 192, 192, 191, 191, 190, 190, 188, 188, 187, 187, 185, 185, 183, 183, 182, 182, 180, 180, 179, 179, 178, 178, 176, 176, 175, 175, 173, 173, 172, 172, 170, 170, 169, 169, 167, 167, 166, 166, 164, 164, 163, 163, 161, 161, 160, 160, 158, 158, 157, 157, 155, 155, 154, 154, 152, 152, 151, 151, 149, 149, 148, 148, 146, 146, 145, 145, 143, 143, 142, 142, 140, 140, 139, 139, 137, 137, 136, 136, 134, 134, 133, 133, 131, 131, 130, 130, 128, 128, 127, 127, 125, 125, 124, 124, 122, 122, 121, 121, 119, 119, 118, 118, 117, 117, 115, 115, 114, 114, 112, 112, 110, 110, 109, 109, 108, 108, 106, 106, 105, 105, 103, 103, 101, 101, 100, 100, 99, 99, 97, 97, 95, 95, 94, 94, 92, 92, 91, 91, 90, 90, 88, 88, 86, 86, 85, 85, 83, 83, 82, 82, 81, 81, 79, 79, 78, 78, 76, 76, 75, 75, 73, 73, 72, 72, 70, 70, 69, 69, 67, 67, 66, 66, 64, 64, 63, 63, 61, 61, 60, 60, 58, 58, 57, 57, 55, 55, 54, 54, 52, 52, 51, 51, 49, 49, 48, 48, 46, 46, 45, 45, 43, 43, 42, 42, 40, 40, 39, 39, 37, 37, 36, 36, 34, 34, 33, 33, 31, 31, 30, 30, 28, 28, 27, 27, 25, 25, 24, 24, 22, 22, 21, 21, 20, 20, 18, 18, 17, 17, 15, 15, 13, 13, 12, 12, 11, 11, 9, 9, 8, 8, 6, 6, 4, 4, 3, 3, 1, 1
        ]
)
distances = np.sqrt(np.diff(x)**2 + np.diff(y)**2)

cumulative_distance = np.insert(np.cumsum(distances), 0, 0)

num_points = 120
equidistant_points = np.linspace(0, cumulative_distance[-1], num_points)

interp_x = interp1d(cumulative_distance, x, kind='linear', bounds_error=False, fill_value="extrapolate")
interp_y = interp1d(cumulative_distance, y, kind='linear', bounds_error=False, fill_value="extrapolate")

new_x = interp_x(equidistant_points)
new_y = interp_y(equidistant_points)


index = np.arange(num_points)

df = pd.DataFrame({
    'Index': index,
    'X': new_x,
    'Y': new_y
})

output_filename = 'coordinates.csv'
df.to_csv(output_filename, index=False) 














print(f"'{output_filename}' dosyası başarıyla oluşturuldu.")
plt.figure(figsize=(10, 8))
plt.plot(x, y, 'bo-', label=f'Orijinal Yol ({len(x)} Nokta)')
plt.plot(new_x, new_y, 'r.-', label=f'Eşit Aralıklı Yol ({num_points} Nokta)', markersize=2)
plt.title('Koordinat Interpolasyonu')
plt.xlabel('X Koordinatı')
plt.ylabel('Y Koordinatı')
plt.legend()
plt.grid(True)
plt.axis('equal')
plt.show()
